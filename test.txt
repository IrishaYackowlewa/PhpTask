After having problems with fwrite() returning 0 in cases where one would fully expect a return value of false, 
I took a look at the source code for php's fwrite() itself. 
The function will only return false if you pass in invalid arguments. 
Any other error, just as a broken pipe or closed connection, will result in a return value of less than strlen($string), in most cases 0.
Therefore, looping with repeated calls to fwrite() until the sum of number of bytes written equals the strlen() 
of the full value or expecting false on error will result in an infinite loop if the connection is lost.
This means the example  fwrite_stream() code from the docs, as well as all the "helper" functions posted
by others in the comments are all broken. You *must* check for a return value of 0 and either abort 
immediately or track a maximum number of retries.
Below is the example from the docs. This code is BAD, as a broken pipe will result in fwrite() infinitely 
looping with a return value of 0. Since the loop only breaks if fwrite() returns false or successfully 
writes all bytes, an infinite loop will occur on failure.  